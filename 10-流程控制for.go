package main

import "fmt"

func main10() {
	// 循环语句
	// for 循环语句
	// 语法：
	// for 表达式1; 表达式2; 表达式3 {
	//     语句
	// }
	// 表达式1：循环条件，在循环开始前进行判断，若为 true，则执行循环体；否则，直接退出循环。
	// 表达式2：循环变量的赋值表达式，在每次循环开始前进行赋值。
	// 表达式3：循环变量的递增表达式，在每次循环结束后进行递增。
	// 语句：循环体，在循环条件为 true 时，循环体内的语句将被执行。
	// 循环语句的特点：
	// 1. 循环条件表达式、循环变量赋值表达式、循环变量递增表达式必须同时存在。
	// 2. 循环体内的语句可以有多个语句，用分号分隔。
	// 3. 循环体内的语句可以嵌套其他循环语句。
	// 注意：
	// 1. 循环条件表达式、循环变量赋值表达式、循环变量递增表达式可以省略，如：for ; i < 10; i++ {}
	// 2. 循环条件表达式、循环变量赋值表达式、循环变量递增表达式可以同时存在，如：for i := 0; i < 10; i++ {}
	// 3. 循环条件表达式、循环变量赋值表达式、循环变量递增表达式可以同时省略，如：for {}

	// 判断1-100有哪些偶数,有多少个偶数
	count := 0 // 记录偶数的个数
	for num := 1; num < 100; num++ {
		if num%2 == 0 {
			fmt.Println("发现偶数:", num)
			count++
		}
	}
	fmt.Printf("1-100一共有多少个偶数: %d\n", count)
}
